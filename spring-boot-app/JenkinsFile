pipeline {
  agent any

  environment {
    AWS_REGION       = 'us-east-1'
    AWS_ACCOUNT_ID   = '382828593676'
    ECR_REPO         = 'my-ecr-repo'
    SONAR_URL        = 'http://<your-sonarqube-ip>:9000' // replace with your actual SonarQube IP
  }

  stages {
    stage('Checkout Code') {
      steps {
        git branch: 'main', url: 'https://github.com/Mithra1995/Jenkins-argocd.git'
      }
    }

    stage('Build with Maven') {
      steps {
        sh 'cd spring-boot-app && mvn clean package'
      }
    }

    stage('SonarQube Analysis') {
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh '''
            cd spring-boot-app
            mvn sonar:sonar \
              -Dsonar.projectKey=JenkinsApp \
              -Dsonar.host.url=$SONAR_URL \
              -Dsonar.login=$SONAR_AUTH_TOKEN
          '''
        }
      }
    }

    stage('Trivy Scan') {
      steps {
        sh '''
          echo "Running Trivy scan..."
          trivy image openjdk:17-jdk || echo "Scan completed with warnings."
        '''
      }
    }

    stage('Build and Push to ECR') {
      environment {
        IMAGE_TAG = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO}:${BUILD_NUMBER}"
      }
      steps {
        withCredentials([[
          $class: 'AmazonWebServicesCredentialsBinding',
          credentialsId: 'aws-creds'
        ]]) {
          sh '''
            aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com
            cd spring-boot-app
            docker build -t $IMAGE_TAG .
            docker push $IMAGE_TAG
          '''
        }
      }
    }

    stage('Update Deployment Manifest') {
      steps {
        withCredentials([string(credentialsId: 'github-token', variable: 'GITHUB_TOKEN')]) {
          sh '''
            git config user.email "your-email@example.com"
            git config user.name "Your Name"
            sed -i "s|replaceImageTag|${BUILD_NUMBER}|" spring-boot-app-manifests/deployment.yml
            git add spring-boot-app-manifests/deployment.yml
            git commit -m "Update image tag to ${BUILD_NUMBER}"
            git push https://$GITHUB_TOKEN@github.com/Mithra1995/Jenkins-argocd.git HEAD:main
          '''
        }
      }
    }
  }
}
